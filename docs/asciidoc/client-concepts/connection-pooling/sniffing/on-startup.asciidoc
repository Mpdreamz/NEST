:section-number: 7.3

:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/current

:github: https://github.com/elastic/elasticsearch-net

:imagesdir: ../../../images

== Sniffing on startup

Connection pools that return true for `SupportsReseeding` by default sniff on startup.

[source,csharp,method="asniffonstartuphappensonce"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(10)
	.Sniff(s => s.Fails(Always))
	.Sniff(s => s.OnPort(9202).Succeeds(Always))
	.SniffingConnectionPool()
	.AllDefaults()
);

await audit.TraceCalls(
	 new ClientCall
	 {
		{ SniffOnStartup},
		{ SniffFailure, 9200},
		{ SniffFailure, 9201},
		{ SniffSuccess, 9202},
		{ PingSuccess , 9200},
		{ HealthyResponse, 9200}
	},
	new ClientCall
	{
		{ PingSuccess, 9201},
		{ HealthyResponse, 9201}
	}
);
----

[source,csharp,method="sniffonstartuptakesnewclusterstate"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(10)
	.Sniff(s => s.Fails(Always))
	.Sniff(s => s.OnPort(9202).Succeeds(Always, Framework.Cluster.Nodes(8, startFrom: 9204)))
	.SniffingConnectionPool()
	.AllDefaults()
);

await audit.TraceCall(new ClientCall {
	{ SniffOnStartup},
	{ SniffFailure, 9200},
	{ SniffFailure, 9201},
	{ SniffSuccess, 9202},
	{ PingSuccess, 9204},
	{ HealthyResponse, 9204}
});
----

[source,csharp,method="snifftriesallnodes"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(10)
	.Sniff(s => s.Fails(Always))
	.Sniff(s => s.OnPort(9209).Succeeds(Always))
	.SniffingConnectionPool()
	.AllDefaults()
);

await audit.TraceCall(new ClientCall {
	{ SniffOnStartup},
	{ SniffFailure, 9200},
	{ SniffFailure, 9201},
	{ SniffFailure, 9202},
	{ SniffFailure, 9203},
	{ SniffFailure, 9204},
	{ SniffFailure, 9205},
	{ SniffFailure, 9206},
	{ SniffFailure, 9207},
	{ SniffFailure, 9208},
	{ SniffSuccess, 9209},
	{ PingSuccess, 9200},
	{ HealthyResponse, 9200}
});
----

[source,csharp,method="sniffprefersmasternodes"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(new[] {
		new Node(new Uri("http://localhost:9200")) { MasterEligible = false },
		new Node(new Uri("http://localhost:9201")) { MasterEligible = false },
		new Node(new Uri("http://localhost:9202")) { MasterEligible = true },
	})
	.Sniff(s => s.Succeeds(Always))
	.SniffingConnectionPool()
	.AllDefaults()
);

await audit.TraceCall(new ClientCall {
	{ SniffOnStartup},
	{ SniffSuccess, 9202},
	{ PingSuccess, 9200},
	{ HealthyResponse, 9200}
});
----

[source,csharp,method="sniffprefersmasternodesbutstillfailsover"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(new[] {
		new Node(new Uri("http://localhost:9200")) { MasterEligible = true },
		new Node(new Uri("http://localhost:9201")) { MasterEligible = true },
		new Node(new Uri("http://localhost:9202")) { MasterEligible = false },
	})
	.Sniff(s => s.Fails(Always))
	.Sniff(s => s.OnPort(9202).Succeeds(Always))
	.SniffingConnectionPool()
	.AllDefaults()
);

await audit.TraceCall(new ClientCall {
	{ SniffOnStartup},
	{ SniffFailure, 9200},
	{ SniffFailure, 9201},
	{ SniffSuccess, 9202},
	{ PingSuccess, 9200},
	{ HealthyResponse, 9200}
});
----

[source,csharp,method="asniffonstartuphappens"]
----
var audit = new Auditor(() => Framework.Cluster
	.Nodes(10)
	.Sniff(s => s.Fails(Always))
	.Sniff(s => s.OnPort(9202).Succeeds(Always))
	.SniffingConnectionPool()
	.AllDefaults()
);
await audit.TraceCall(new ClientCall
 {
	{ SniffOnStartup},
	{ SniffFailure, 9200},
	{ SniffFailure, 9201},
	{ SniffSuccess, 9202},
	{ PingSuccess , 9200},
	{ HealthyResponse, 9200}
});
----

