:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/6.1

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Aggregations/Bucket/Filters/FiltersAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[filters-aggregation-usage]]
=== Filters Aggregation Usage

Defines a multi bucket aggregations where each bucket is associated with a filter.
Each bucket will collect all documents that match its associated filter. For documents
that do not match any filter, these will be collected in the _other bucket_.

Be sure to read the Elasticsearch documentation {ref_current}/search-aggregations-bucket-filters-aggregation.html[Filters Aggregation]

[float]
=== Named filters

==== Handling Responses

The `AggregateDictionary found on `.Aggregations` on `ISearchResponse<T>` has several helper methods
so we can fetch our aggregation results easily in the correct type.
<<handling-aggregate-response, Be sure to read more about these helper methods>>

[source,csharp]
----
response.ShouldBeValid();

var filterAgg = response.Aggregations.Filters("projects_by_state");
filterAgg.Should().NotBeNull();

var namedResult = filterAgg.NamedBucket("belly_up");
namedResult.Should().NotBeNull();
namedResult.DocCount.Should().BeGreaterThan(0);

namedResult = filterAgg.NamedBucket("stable");
namedResult.Should().NotBeNull();
namedResult.DocCount.Should().BeGreaterThan(0);

namedResult = filterAgg.NamedBucket("very_active");
namedResult.Should().NotBeNull();
namedResult.DocCount.Should().BeGreaterThan(0);

namedResult = filterAgg.NamedBucket("other_states_of_being");
namedResult.Should().NotBeNull();
namedResult.DocCount.Should().Be(0);
----

[float]
=== Anonymous filters

==== Handling Responses

The `AggregateDictionary found on `.Aggregations` on `ISearchResponse<T>` has several helper methods
so we can fetch our aggregation results easily in the correct type.
<<handling-aggregate-response, Be sure to read more about these helper methods>>

[source,csharp]
----
response.ShouldBeValid();

var filterAgg = response.Aggregations.Filters("projects_by_state");
filterAgg.Should().NotBeNull();
var results = filterAgg.AnonymousBuckets();
results.Count.Should().Be(4);

foreach (var singleBucket in results.Take(3))
{
    singleBucket.DocCount.Should().BeGreaterThan(0);
}

results.Last().DocCount.Should().Be(0); <1>
----
<1> The last bucket is the _other bucket_

[float]
=== Empty Filters

[source,csharp]
----
response.ShouldBeValid();
response.Aggregations.Filters("empty_filters").Buckets.Should().BeEmpty();
----

[float]
=== Conditionless Filters 

[source,csharp]
----
response.ShouldBeValid();
response.Aggregations.Filters("conditionless_filters").Buckets.Should().BeEmpty();
----

