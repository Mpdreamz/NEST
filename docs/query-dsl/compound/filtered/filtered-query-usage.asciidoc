:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/2.4

:xpack_current: https://www.elastic.co/guide/en/x-pack/2.4

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/2.x/src/Tests/QueryDsl/Compound/Filtered/FilteredQueryUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[filtered-query-usage]]
=== Filtered Query Usage

The filtered query is used to combine a query which will be used for scoring with another
query which will only be used for filtering the result set.

WARNING: Deprecated in 2.0.0-beta1. Use the <<bool-queries, bool query>> instead with a`must` clause for the query and a `filter` clause for the filter.

See the Elasticsearch documentation on {ref_current}/query-dsl-filtered-query.html[filtered query] for more details.

==== Fluent DSL example

[source,csharp]
----
q
.Filtered(c => c
    .Name("named_query")
    .Boost(1.1)
    .Filter(qq => qq.MatchAll(m => m.Name("filter")))
    .Query(qq => qq.MatchAll(m => m.Name("query")))
)
----

==== Object Initializer syntax example

[source,csharp]
----
new FilteredQuery()
{
    Name = "named_query",
    Boost = 1.1,
    Filter = new MatchAllQuery { Name ="filter" },
    Query = new MatchAllQuery() { Name = "query" },
}
----

[source,javascript]
.Example json output
----
{
  "filtered": {
    "_name": "named_query",
    "boost": 1.1,
    "filter": {
      "match_all": {
        "_name": "filter"
      }
    },
    "query": {
      "match_all": {
        "_name": "query"
      }
    }
  }
}
----

