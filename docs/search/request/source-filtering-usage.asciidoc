:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/2.4

:xpack_current: https://www.elastic.co/guide/en/x-pack/2.4

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/2.x/src/Tests/Search/Request/SourceFilteringUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[source-filtering-usage]]
== Source Filtering Usage

Allows to control how the `_source` field is returned with every hit.
By default, operations return the contents of the `_source` field unless
you have used the fields parameter, or if the `_source` field is disabled.

See the Elasticsearch documentation on {ref_current}/search-request-source-filtering.html[Source Filtering] for more detail.

[float]
=== Fluent DSL example

[source,csharp]
----
s => s
.Source(src => src
    .IncludeAll()
    .Exclude(e => e
        .Fields(
            p => p.Description
        )
    )
)
----

[float]
=== Object Initializer syntax example

[source,csharp]
----
new SearchRequest<Project>
{
    Source = new SourceFilter
    {
        Include = "*",
        Exclude = Fields<Project>(p => p.Description)
    }
}
----

[source,javascript]
.Example json output
----
{
  "_source": {
    "include": [
      "*"
    ],
    "exclude": [
      "description"
    ]
  }
}
----

[float]
=== Handling Responses

[source,csharp]
----
response.ShouldBeValid();

foreach (var document in response.Documents)
{
    document.Name.Should().NotBeNull();
    document.StartedOn.Should().NotBe(default(DateTime));
    document.Description.Should().BeNull();
}
----

[float]
== Disable Source Retrieval

Source filtering can be disabled by setting disable to `true`.

[float]
=== Fluent DSL example

[source,csharp]
----
s => s
.Source(src => src.Disable())
----

[float]
=== Object Initializer syntax example

[source,csharp]
----
new SearchRequest<Project>
{
    Source = new SourceFilter
    {
        Disable = true
    }
}
----

[source,javascript]
.Example json output
----
{
  "_source": false
}
----

[float]
=== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
foreach (var hit in response.Hits)
    hit.Source.Should().BeNull();
----

