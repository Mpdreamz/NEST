@using System.Collections.Generic
@using CodeGeneration.LowLevelClient.Domain
@using CodeGeneration.LowLevelClient

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;

///This file contains all the typed querystring parameters that are generated of the client spec.
///This file is automatically generated from https://github.com/elasticsearch/elasticsearch-rest-api-spec
///Generated of commit @Model.Commit

namespace Elasticsearch.Net
{
	
	@foreach (CsharpMethod method in Model.CsharpMethodsWithQueryStringInfo)
	{
	<text>
	///<summary>Query string descriptor for @method.FullName
	///<pre>
	///@method.Documentation
	///</pre>
	///</summary>
	public class @method.QueryStringParamName : FluentQueryString<@method.QueryStringParamName> 
	{
	  @foreach (KeyValuePair<string, ApiQueryParameters> kv in method.Url.Params)
	  {
		  var mm = kv.Key;
		  var fieldType = kv.Value.CsharpType(kv.Key).Replace("params", "");
		  var setter = mm;
		  var isFields = (mm.Contains("fields") || mm.Contains("source_include") || mm.Contains("source_exclude"));
		  if (isFields && fieldType.Contains("string"))
		  {
			  fieldType = "IEnumerable<object>";
			  setter = mm + ".Select(f=>(object)f)";
		  }
		  else if (mm.Contains("field") && fieldType.Contains("string"))
		  {
			  fieldType = "object";
		  }
		<text>
		internal @Raw(fieldType) _@(kv.Key) { get; set; }
		///<summary>@kv.Value.Description</summary>
		public @method.QueryStringParamName @(mm.ToPascalCase())(@kv.Value.CsharpType(mm) @mm)
		{
			this._@(mm) = @Raw(setter);
			this.Add("@mm", this._@mm);
			return this;
		}
		</text>
	  }
	}
	</text>
	}
	
}
 