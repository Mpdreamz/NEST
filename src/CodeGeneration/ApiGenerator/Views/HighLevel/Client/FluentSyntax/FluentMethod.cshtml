@using System
@using System.Linq
@using System.Collections.Generic
@using RazorLight
@using ApiGenerator.Domain
@using System.Text.RegularExpressions
@using ApiGenerator.Domain.Code.HighLevel.Methods
@inherits ApiGenerator.CodeTemplatePage<FluentSyntaxView>
@{
	FluentSyntaxBase syntax = Model.Syntax;
	
	var method = !Model.Async ? syntax.MethodName : string.Format("{0}Async", syntax.MethodName);
	
	var requestMethodGenerics = syntax.RequestMethodGenerics;
	var descriptor = syntax.DescriptorName;
	var selectorArgs = syntax.SelectorArguments();
	var selectorChained = syntax.SelectorChainedDefaults();
	var cancellationToken = !Model.Async ? string.Empty : ", ct";
}
@{ IncludeAsync("HighLevel/Client/MethodXmlDocs.cshtml", syntax); }
public @{ IncludeAsync("HighLevel/Client/FluentSyntax/FluentMethodHeader.cshtml", Model);} @Raw("=>")
	@(method)@(Raw(requestMethodGenerics))(selector.InvokeOrDefault(new @(Raw(descriptor))(@Raw(selectorArgs))@(@selectorChained))@cancellationToken);
