// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗  
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝  
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//  
// This file is automatically generated 
// Please do not edit these files manually
// Run the following in the root of the repos:
//
// 		*NIX 		:	./build.sh codegen
// 		Windows 	:	build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using Elasticsearch.Net.Specification.EqlApi;

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace Nest.Specification.EqlApi
{
	///<summary>
	/// Eql APIs.
	/// <para>Not intended to be instantiated directly. Use the <see cref = "IElasticClient.Eql"/> property
	/// on <see cref = "IElasticClient"/>.
	///</para>
	///</summary>
	public class EqlNamespace : NamespacedClientProxy
	{
		internal EqlNamespace(ElasticClient client): base(client)
		{
		}

		/// <summary>
		/// <c>POST</c> request to the <c>eql.search</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html</a>
		/// </summary>
		public EqlSearchResponse<TDocument> Search<TDocument>(IndexName index, Func<EqlSearchDescriptor, IEqlSearchRequest> selector = null)
			where TDocument : class => Search<TDocument>(selector.InvokeOrDefault(new EqlSearchDescriptor(index: index)));
		/// <summary>
		/// <c>POST</c> request to the <c>eql.search</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html</a>
		/// </summary>
		public Task<EqlSearchResponse<TDocument>> SearchAsync<TDocument>(IndexName index, Func<EqlSearchDescriptor, IEqlSearchRequest> selector = null, CancellationToken ct = default)
			where TDocument : class => SearchAsync<TDocument>(selector.InvokeOrDefault(new EqlSearchDescriptor(index: index)), ct);
		/// <summary>
		/// <c>POST</c> request to the <c>eql.search</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html</a>
		/// </summary>
		public EqlSearchResponse<TDocument> Search<TDocument>(IEqlSearchRequest request)
			where TDocument : class => DoRequest<IEqlSearchRequest, EqlSearchResponse<TDocument>>(request, request.RequestParameters);
		/// <summary>
		/// <c>POST</c> request to the <c>eql.search</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/eql-search-api.html</a>
		/// </summary>
		public Task<EqlSearchResponse<TDocument>> SearchAsync<TDocument>(IEqlSearchRequest request, CancellationToken ct = default)
			where TDocument : class => DoRequestAsync<IEqlSearchRequest, EqlSearchResponse<TDocument>>(request, request.RequestParameters, ct);
	}
}